Sub Void
  LangList = LangList 
  PrgmVersionID = PrgmVersionID 
  logfunction = logfunction 
  CLLF = CLLF
  AssetPath = AssetPath 
  OnlineDB_Refrence_Location = OnlineDB_Refrence_Location 
  PRODUCTID = PRODUCTID 
  List_Stack_Trace = List_Stack_Trace
EndSub

'______________________________________________________________________________
'                       Update Function
'______________________________________________________________________________

Sub Main
  LDList.Add(List_Stack_Trace,"Plugin : Update.Main")  
  Updater_URL_ID = 1
  UpdateDownload()
  UpdateUI()
EndSub

Sub UpdateDownload
  LDList.Add(List_Stack_Trace,"Plugin : Update.Download") 
  UpdaterDB = AssetPath+"Updater.db"
  
  If LDNetwork.DownloadFile(UpdaterDB,OnlineDB_Refrence_Location) <> "-1" Then 
    UpdaterDB =  LDDataBase.ConnectSQLite(UpdaterDB)
    QueryItems =  LDDataBase.Query(UpdaterDB,"SELECT * FROM updates WHERE PRODUCTID =" + "'"+PRODUCTID + "';" ,"","True") 
    
    LatestVersion = QueryItems[1]["VERSION"]
    DownloadLocation[1] = QueryItems[1]["URL"] 
    DownloadLocation[2] = QueryItems[1]["URL2"]
  Else
    GraphicsWindow.ShowMessage(LangList["Check Log"],LangList["Error"])
  EndIf 
EndSub 

Sub UpdateUI
  LDList.Add(List_Stack_Trace,"Plugin : Update.UI") 
  If LatestVersion = PrgmVersionID  Then 
    LDCall.Function2(logfunction ,"No Update Available", "UI" ) 
    GraphicsWindow.ShowMessage("There are no updates available","No Updates") '//Localize 
  ElseIf PrgmVersionID  > LatestVersion  Then 
    LDCall.Function2(logfunction ,"You have early beta version of the program", LangList["UI"]) '//Localize 
    GraphicsWindow.ShowMessage("You have a more recent edition of the program than that offered to the public." + CLLF + " You have version " + PrgmVersionID  + " while the most recent public release is version " + LatestVersion,"No Updates") '//Localize 
  ElseIf (PrgmVersionID  < LatestVersion) Then 
    If   ( LDDialogs.Confirm("Do you wish to download Version " + LatestVersion + "? You have Version " + PrgmVersionID ,"Download Update") = "Yes" ) Then '//Localize 
      LDCall.Function2(logfunction ,"Starting Download of Update", LangList["UI"] )   '//Localize 
      DownloadUpdate()  
    EndIf  
  EndIf 
EndSub

Sub DownloadUpdate
  LDList.Add(List_Stack_Trace,"Plugin : Update.DownloadUpdate") 
  DownloadFolder = "" 
  UpdaterSize = ""
  While UpdaterSize = "" And Array.GetItemCount( DownloadLocation ) >= Updater_URL_ID 
    While DownloadFolder = "" Or LDFile.GetExtension ( DownloadFolder ) = ""
      GraphicsWindow.ShowMessage("You will be prompted to select the download location.","Download Location") '//Localize 
      DownloadFolder =  LDDialogs.SaveFile("1=zip;2=*","C:\Users\"+LDFile.UserName)
    EndWhile 
    
    UpdaterSize = LDNetwork.DownloadFile(DownloadFolder,DownloadLocation[ Updater_URL_ID ]) 
    
    If UpdaterSize <> "-1" then 
      LDCall.Function2(logfunction ,"Dowloaded update to : " + DownloadFolder, LangList["UI"] ) '//Localize 
      GraphicsWindow.ShowMessage("SUCCESS","Update Downloaded")'//Localize 
    ElseIf UpdaterSize = "-1" And Array.GetItemCount( DownloadLocation ) = Updater_URL_ID Then 
      GraphicsWindow.ShowMessage(LangList["Check Log"],LangList["Error"])
    Else 
      Updater_URL_ID = Updater_URL_ID + 1 
      GraphicsWindow.ShowMessage("Unable to download from : " + DownloadFolder[ Updater_URL_ID ] + ". Attempting to use backup host",LangList["Error"]) '//Localize 
      UpdaterSize = ""
    EndIf 
  EndWhile
EndSub 